<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

   
   <!-- 이메일 중복 검사 -->
   <select id="check_email" parameterType="String" resultType="int">
   		select count(*) from member where email = #{email}
   </select>
   
   <!-- 닉네임 중복 검사 -->
   <select id = "create_penName" parameterType="String" resultType="int">
   		select count(*) from member where pen_name = #{pen_name}
   </select>
   
   
   <!-- 회원 가입 -->
   <insert id="join_member" parameterType="pet.model.dto.MemberDTO">
   		insert into member 
   		( no, email, pw, name, phone, pen_name, point, marketing, reg_date, log_date, approval_status, approval_key) 
   		values
   																						(Member_seq.NEXTVAL,
   																						#{email, jdbcType=VARCHAR}, 
   																						#{pw, jdbcType=VARCHAR}, 
   																						#{name, jdbcType=VARCHAR},
   																						0,
   																						#{pen_name, jdbcType=VARCHAR},
   																						0,
   																						1,
   																						sysdate, 
   																						sysdate, 
   																						0, 
   																						#{approval_key, jdbcType=VARCHAR})																		
   </insert>
   
  	<!-- 이메일 인증 -->
	<update id="approval_member" parameterType="pet.model.dto.MemberDTO">
		update member set approval_status = 1 where email = #{email, jdbcType=VARCHAR} and approval_key = #{approval_key}
	</update>
	
	<!-- 로그인 -->
	<select id="login_member" parameterType="String" resultType="register">
		select * from member where email = #{email}
	</select>
	
	<!-- 로그인 접속일자 수정	 -->
	<update id="update_log" parameterType="String">
		update member set log_date = sysdate where email = #{email}
	</update>
	
	<!-- 나의 회원정보 수정 -->
	<update id="update_mypage" parameterType="register">
		update member set  pen_name = #{pen_name, jdbcType=VARCHAR} where email = #{email, jdbcType=VARCHAR}
	</update>
	
	
	
	<!-- 프로필 수정 -->
	<update id = "update_profile" parameterType="register">
		update member set pen_name=#{pen_name}, org_profile=#{org_profile} where no = #{no , jdbcType=NUMERIC}
	</update>

	
	<select id = "member" resultType="register" parameterType = "register">
		select * from MEMBER where email = #{email, jdbcType=VARCHAR}
	</select>

	<!-- 나의  비밀번호 수정 -->
	<update id="update_pw" parameterType="register">
		update member set  pw= #{pw, jdbcType=VARCHAR} where email = #{email, jdbcType=VARCHAR}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id = "deleteMember" parameterType="register">
		update member set approval_status = -1 where pw = #{pw, jdbcType=VARCHAR} 
	</update>
	
	<select id="userCheck" resultType="int" parameterType="register">
		select count(*) from MEMBER where email =#{email, jdbcType=VARCHAR} 
		<if test="pw != null">
			and pw = #{pw, jdbcType=VARCHAR}
		</if>
	</select>
	
	<!--  마이페이지  -->
	
	<select id="countReview" parameterType="String" resultType="int">
		select count(*) from review where member_email = #{value}
	</select>
	
	<select id = "countReview_like" parameterType = "String" resultType = "int">
		select count(*) from review_like where member_email =#{value} 
	</select>
	
	<select id="reviewList" resultType="reviewDTO" parameterType="String">
		select * from review where member_email = #{value}
	</select>







		   
</mapper>


















